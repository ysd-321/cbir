import React, { useState, useRef, useEffect } from "react";

// CloudPopup.jsx
// Default-exported React component. Uses Tailwind CSS classes for layout & styling.
// - Click the button to toggle the popup.
// - Popup is an SVG cloud with a red stroke and a content container centered inside.
// - Accessible (aria-expanded) and simple keyboard handling (Esc to close).

export default function CloudPopup() {
  const [open, setOpen] = useState(false);
  const popupRef = useRef(null);

  useEffect(() => {
    function onKey(e) {
      if (e.key === "Escape") setOpen(false);
    }
    window.addEventListener("keydown", onKey);
    return () => window.removeEventListener("keydown", onKey);
  }, []);

  // click outside to close
  useEffect(() => {
    function onDocClick(e) {
      if (!open) return;
      if (popupRef.current && !popupRef.current.contains(e.target)) setOpen(false);
    }
    document.addEventListener("mousedown", onDocClick);
    return () => document.removeEventListener("mousedown", onDocClick);
  }, [open]);

  return (
    <div className="min-h-screen flex items-center justify-center p-8">
      <div className="relative">
        <button
          aria-expanded={open}
          aria-controls="cloud-popup"
          className="px-4 py-2 rounded-md bg-red-600 text-white shadow hover:opacity-95 focus:outline-none focus:ring-2 focus:ring-red-300"
          onClick={() => setOpen((s) => !s)}
        >
          Toggle Cloud Popup
        </button>

        {/* Popup container positioned relative to the button */}
        {open && (
          <div
            ref={popupRef}
            id="cloud-popup"
            role="dialog"
            aria-modal="false"
            className="absolute left-1/2 transform -translate-x-1/2 mt-4 z-50"
            style={{ width: 420 }}
          >
            {/* SVG cloud - red border (stroke) + soft shadow */}
            <svg viewBox="0 0 600 220" width="100%" height="auto" className="block">
              <defs>
                <filter id="cloudShadow" x="-50%" y="-50%" width="200%" height="200%">
                  <feDropShadow dx="0" dy="6" stdDeviation="8" floodOpacity="0.15" />
                </filter>
              </defs>

              {/* Cloud path: modest, rounded cloud shape */}
              <path
                d="M150 60
                   c-32 0 -58 26 -58 58
                   c0 11 3 21 8 30
                   c-20 4 -36 21 -36 42
                   c0 24 20 44 44 44
                   h220
                   c36 0 66 -30 66 -66
                   c0 -33 -24 -60 -56 -65
                   c-6 -28 -31 -48 -60 -48
                   c-18 0 -34 7 -46 18
                   c-12 -21 -35 -36 -62 -36
                   z"
                fill="#ffffff"
                stroke="#ff0000"
                strokeWidth={6}
                strokeLinejoin="round"
                strokeLinecap="round"
                filter="url(#cloudShadow)"
              />

              {/* inner white fill is already the path fill; now place the content with foreignObject */}
              <foreignObject x="40" y="70" width="520" height="120">
                <div xmlns="http://www.w3.org/1999/xhtml" className="h-full flex items-center justify-center">
                  <div className="p-4 max-w-full text-center">
                    <h3 className="text-lg font-semibold">Cloud Popup</h3>
                    <p className="mt-2 text-sm">This is a content area inside a cloud-shaped popup with a red border.</p>
                    <div className="mt-3 flex items-center justify-center gap-2">
                      <button
                        onClick={() => alert("Action inside popup")}
                        className="px-3 py-1 rounded bg-red-600 text-white text-sm focus:outline-none focus:ring-2 focus:ring-red-300"
                      >
                        Action
                      </button>
                      <button
                        onClick={() => setOpen(false)}
                        className="px-3 py-1 rounded border text-sm"
                      >
                        Close
                      </button>
                    </div>
                  </div>
                </div>
              </foreignObject>
            </svg>

            {/* Small pointer/arrow under the cloud to point to the button (optional) */}
            <div className="flex justify-center -mt-3">
              <div style={{ width: 28, height: 14 }}>
                <svg viewBox="0 0 28 14" width="100%" height="100%">
                  <path d="M0 0 L14 14 L28 0 Z" fill="#ffffff" stroke="#ff0000" strokeWidth={2} />
                </svg>
              </div>
            </div>
          </div>
        )}
      </div>
    </div>
  );
}
